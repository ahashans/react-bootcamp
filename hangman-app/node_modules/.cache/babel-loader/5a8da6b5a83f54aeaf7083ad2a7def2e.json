{"ast":null,"code":"var _jsxFileName = \"/home/ahashan/programs/react_apps/react-bootcamp/hangman-app/src/Hangman.js\";\nimport React, { Component } from \"react\";\nimport \"./Hangman.css\";\nimport img0 from \"./0.jpg\";\nimport img1 from \"./1.jpg\";\nimport img2 from \"./2.jpg\";\nimport img3 from \"./3.jpg\";\nimport img4 from \"./4.jpg\";\nimport img5 from \"./5.jpg\";\nimport img6 from \"./6.jpg\";\n\nclass Hangman extends Component {\n  /** by default, allow 6 guesses and use provided gallows images. */\n  constructor(props) {\n    super(props);\n    this.state = {\n      nWrong: 0,\n      guessed: new Set(),\n      answer: \"apple\"\n    };\n    this.handleGuess = this.handleGuess.bind(this);\n    this.refreshPage = this.refreshPage.bind(this);\n  }\n  /** guessedWord: show current-state of word:\n    if guessed letters are {a,p,e}, show \"app_e\" for \"apple\"\n  */\n\n\n  guessedWord() {\n    return this.state.answer.split(\"\").map(ltr => this.state.guessed.has(ltr) ? ltr : \"_\");\n  }\n  /** handleGuest: handle a guessed letter:\n    - add to guessed letters\n    - if not in answer, increase number-wrong guesses\n  */\n\n\n  handleGuess(evt) {\n    let ltr = evt.target.value;\n    this.setState(st => ({\n      guessed: st.guessed.add(ltr),\n      nWrong: st.nWrong + (st.answer.includes(ltr) ? 0 : 1)\n    }));\n\n    if (this.state.nWrong === this.props.maxWrong) {\n      console.log(\"doomed!\");\n    }\n  }\n\n  refreshPage() {\n    window.location(false);\n  }\n  /** generateButtons: return array of letter buttons to render */\n\n\n  generateButtons() {\n    return \"abcdefghijklmnopqrstuvwxyz\".split(\"\").map(ltr => React.createElement(\"button\", {\n      value: ltr,\n      onClick: this.handleGuess,\n      key: ltr,\n      disabled: this.state.nWrong < this.props.maxWrong && this.state.guessed.has(ltr),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, ltr));\n  }\n  /** render: render game */\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Hangman\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Hangman\"), this.state.nWrong < this.props.maxWrong && React.createElement(\"img\", {\n      src: this.props.images[this.state.nWrong],\n      alt: this.props.maxWrong - this.state.nWrong + \" guess remaining!\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), this.state.nWrong < this.props.maxWrong ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Incorrect Guesses: \", this.state.nWrong) : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"You Lost!\"), this.state.nWrong < this.props.maxWrong ? React.createElement(\"p\", {\n      className: \"Hangman-word\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, this.guessedWord()) : React.createElement(\"p\", {\n      className: \"Hangman-word\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, this.state.answer), React.createElement(\"p\", {\n      className: \"Hangman-btns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, this.generateButtons()), this.state.nWrong > 0 && React.createElement(\"input\", {\n      onClick: this.refreshPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Play Again\"));\n  }\n\n}\n\nHangman.defaultProps = {\n  maxWrong: 6,\n  images: [img0, img1, img2, img3, img4, img5, img6]\n};\nexport default Hangman;","map":{"version":3,"sources":["/home/ahashan/programs/react_apps/react-bootcamp/hangman-app/src/Hangman.js"],"names":["React","Component","img0","img1","img2","img3","img4","img5","img6","Hangman","constructor","props","state","nWrong","guessed","Set","answer","handleGuess","bind","refreshPage","guessedWord","split","map","ltr","has","evt","target","value","setState","st","add","includes","maxWrong","console","log","window","location","generateButtons","render","images","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Hangman.css\";\nimport img0 from \"./0.jpg\";\nimport img1 from \"./1.jpg\";\nimport img2 from \"./2.jpg\";\nimport img3 from \"./3.jpg\";\nimport img4 from \"./4.jpg\";\nimport img5 from \"./5.jpg\";\nimport img6 from \"./6.jpg\";\n\nclass Hangman extends Component {\n  /** by default, allow 6 guesses and use provided gallows images. */\n  static defaultProps = {\n    maxWrong: 6,\n    images: [img0, img1, img2, img3, img4, img5, img6]\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = { nWrong: 0, guessed: new Set(), answer: \"apple\" };\n    this.handleGuess = this.handleGuess.bind(this);\n    this.refreshPage = this.refreshPage.bind(this);\n  }\n\n  /** guessedWord: show current-state of word:\n    if guessed letters are {a,p,e}, show \"app_e\" for \"apple\"\n  */\n  guessedWord() {\n    return this.state.answer\n      .split(\"\")\n      .map(ltr => (this.state.guessed.has(ltr) ? ltr : \"_\"));\n  }\n\n  /** handleGuest: handle a guessed letter:\n    - add to guessed letters\n    - if not in answer, increase number-wrong guesses\n  */\n  handleGuess(evt) {\n    let ltr = evt.target.value;\n    this.setState(st => ({\n      guessed: st.guessed.add(ltr),\n      nWrong: st.nWrong + (st.answer.includes(ltr) ? 0 : 1)\n    }));\n    if(this.state.nWrong===this.props.maxWrong){\n      console.log(\"doomed!\")\n    }\n  }\n  refreshPage(){\n    window.location(false);\n  }\n  /** generateButtons: return array of letter buttons to render */\n  generateButtons() {\n    return \"abcdefghijklmnopqrstuvwxyz\".split(\"\").map(ltr => (\n      <button\n        value={ltr}\n        onClick={this.handleGuess}\n        key={ltr}\n        disabled={this.state.nWrong<this.props.maxWrong&&this.state.guessed.has(ltr)}\n      >\n        {ltr}\n      </button>\n    ));\n  }\n\n  /** render: render game */\n  render() {\n    return (\n      <div className='Hangman'>\n        <h1>Hangman</h1>\n        {this.state.nWrong<this.props.maxWrong&&<img src={this.props.images[this.state.nWrong]} alt={(this.props.maxWrong - this.state.nWrong)+\" guess remaining!\"}/>}\n        {this.state.nWrong<this.props.maxWrong?<p>Incorrect Guesses: {this.state.nWrong}</p>:<p>You Lost!</p>}\n        {this.state.nWrong<this.props.maxWrong?<p className='Hangman-word'>{this.guessedWord()}</p>:<p className='Hangman-word'>{this.state.answer}</p>}\n        <p className='Hangman-btns'>{this.generateButtons()}</p>\n        {this.state.nWrong>0&& <input onClick={this.refreshPage}>Play Again</input>}\n      </div>\n    );\n  }\n}\n\nexport default Hangman;\n"]},"metadata":{},"sourceType":"module"}